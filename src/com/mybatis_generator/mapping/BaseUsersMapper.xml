<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mybatis_generator.dao.BaseUsersMapper" >
  <resultMap id="BaseResultMap" type="com.mybatis_generator.model.BaseUsers" >
    <id column="USER_ID" property="userId" jdbcType="VARCHAR" />
    <result column="ACCOUNT" property="account" jdbcType="VARCHAR" />
    <result column="PASSWORD" property="password" jdbcType="VARCHAR" />
    <result column="REAL_NAME" property="realName" jdbcType="VARCHAR" />
    <result column="SEX" property="sex" jdbcType="DECIMAL" />
    <result column="EMAIL" property="email" jdbcType="VARCHAR" />
    <result column="MOBILE" property="mobile" jdbcType="VARCHAR" />
    <result column="OFFICE_PHONE" property="officePhone" jdbcType="VARCHAR" />
    <result column="ERROR_COUNT" property="errorCount" jdbcType="DECIMAL" />
    <result column="LAST_LOGIN_TIME" property="lastLoginTime" jdbcType="DATE" />
    <result column="LAST_LOGIN_IP" property="lastLoginIp" jdbcType="VARCHAR" />
    <result column="REMARK" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    USER_ID, ACCOUNT, PASSWORD, REAL_NAME, SEX, EMAIL, MOBILE, OFFICE_PHONE, ERROR_COUNT, 
    LAST_LOGIN_TIME, LAST_LOGIN_IP, REMARK
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.mybatis_generator.model.BaseUsersExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from BASE_USERS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from BASE_USERS
    where USER_ID = #{userId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from BASE_USERS
    where USER_ID = #{userId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.mybatis_generator.model.BaseUsersExample" >
    delete from BASE_USERS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mybatis_generator.model.BaseUsers" >
    insert into BASE_USERS (USER_ID, ACCOUNT, PASSWORD, 
      REAL_NAME, SEX, EMAIL, 
      MOBILE, OFFICE_PHONE, ERROR_COUNT, 
      LAST_LOGIN_TIME, LAST_LOGIN_IP, REMARK
      )
    values (#{userId,jdbcType=VARCHAR}, #{account,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{realName,jdbcType=VARCHAR}, #{sex,jdbcType=DECIMAL}, #{email,jdbcType=VARCHAR}, 
      #{mobile,jdbcType=VARCHAR}, #{officePhone,jdbcType=VARCHAR}, #{errorCount,jdbcType=DECIMAL}, 
      #{lastLoginTime,jdbcType=DATE}, #{lastLoginIp,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mybatis_generator.model.BaseUsers" >
    insert into BASE_USERS
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="account != null" >
        ACCOUNT,
      </if>
      <if test="password != null" >
        PASSWORD,
      </if>
      <if test="realName != null" >
        REAL_NAME,
      </if>
      <if test="sex != null" >
        SEX,
      </if>
      <if test="email != null" >
        EMAIL,
      </if>
      <if test="mobile != null" >
        MOBILE,
      </if>
      <if test="officePhone != null" >
        OFFICE_PHONE,
      </if>
      <if test="errorCount != null" >
        ERROR_COUNT,
      </if>
      <if test="lastLoginTime != null" >
        LAST_LOGIN_TIME,
      </if>
      <if test="lastLoginIp != null" >
        LAST_LOGIN_IP,
      </if>
      <if test="remark != null" >
        REMARK,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="account != null" >
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="realName != null" >
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=DECIMAL},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="officePhone != null" >
        #{officePhone,jdbcType=VARCHAR},
      </if>
      <if test="errorCount != null" >
        #{errorCount,jdbcType=DECIMAL},
      </if>
      <if test="lastLoginTime != null" >
        #{lastLoginTime,jdbcType=DATE},
      </if>
      <if test="lastLoginIp != null" >
        #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mybatis_generator.model.BaseUsersExample" resultType="java.lang.Integer" >
    select count(*) from BASE_USERS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update BASE_USERS
    <set >
      <if test="record.userId != null" >
        USER_ID = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.account != null" >
        ACCOUNT = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        PASSWORD = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.realName != null" >
        REAL_NAME = #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        SEX = #{record.sex,jdbcType=DECIMAL},
      </if>
      <if test="record.email != null" >
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null" >
        MOBILE = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.officePhone != null" >
        OFFICE_PHONE = #{record.officePhone,jdbcType=VARCHAR},
      </if>
      <if test="record.errorCount != null" >
        ERROR_COUNT = #{record.errorCount,jdbcType=DECIMAL},
      </if>
      <if test="record.lastLoginTime != null" >
        LAST_LOGIN_TIME = #{record.lastLoginTime,jdbcType=DATE},
      </if>
      <if test="record.lastLoginIp != null" >
        LAST_LOGIN_IP = #{record.lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        REMARK = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update BASE_USERS
    set USER_ID = #{record.userId,jdbcType=VARCHAR},
      ACCOUNT = #{record.account,jdbcType=VARCHAR},
      PASSWORD = #{record.password,jdbcType=VARCHAR},
      REAL_NAME = #{record.realName,jdbcType=VARCHAR},
      SEX = #{record.sex,jdbcType=DECIMAL},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      MOBILE = #{record.mobile,jdbcType=VARCHAR},
      OFFICE_PHONE = #{record.officePhone,jdbcType=VARCHAR},
      ERROR_COUNT = #{record.errorCount,jdbcType=DECIMAL},
      LAST_LOGIN_TIME = #{record.lastLoginTime,jdbcType=DATE},
      LAST_LOGIN_IP = #{record.lastLoginIp,jdbcType=VARCHAR},
      REMARK = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mybatis_generator.model.BaseUsers" >
    update BASE_USERS
    <set >
      <if test="account != null" >
        ACCOUNT = #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        PASSWORD = #{password,jdbcType=VARCHAR},
      </if>
      <if test="realName != null" >
        REAL_NAME = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        SEX = #{sex,jdbcType=DECIMAL},
      </if>
      <if test="email != null" >
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        MOBILE = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="officePhone != null" >
        OFFICE_PHONE = #{officePhone,jdbcType=VARCHAR},
      </if>
      <if test="errorCount != null" >
        ERROR_COUNT = #{errorCount,jdbcType=DECIMAL},
      </if>
      <if test="lastLoginTime != null" >
        LAST_LOGIN_TIME = #{lastLoginTime,jdbcType=DATE},
      </if>
      <if test="lastLoginIp != null" >
        LAST_LOGIN_IP = #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where USER_ID = #{userId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mybatis_generator.model.BaseUsers" >
    update BASE_USERS
    set ACCOUNT = #{account,jdbcType=VARCHAR},
      PASSWORD = #{password,jdbcType=VARCHAR},
      REAL_NAME = #{realName,jdbcType=VARCHAR},
      SEX = #{sex,jdbcType=DECIMAL},
      EMAIL = #{email,jdbcType=VARCHAR},
      MOBILE = #{mobile,jdbcType=VARCHAR},
      OFFICE_PHONE = #{officePhone,jdbcType=VARCHAR},
      ERROR_COUNT = #{errorCount,jdbcType=DECIMAL},
      LAST_LOGIN_TIME = #{lastLoginTime,jdbcType=DATE},
      LAST_LOGIN_IP = #{lastLoginIp,jdbcType=VARCHAR},
      REMARK = #{remark,jdbcType=VARCHAR}
    where USER_ID = #{userId,jdbcType=VARCHAR}
  </update>
</mapper>